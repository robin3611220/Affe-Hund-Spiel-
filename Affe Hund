<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <title>Affe reitet auf Hund</title>
  <style>
    body { margin: 0; overflow: hidden; background: #d0f4f7; }
    canvas { display: block; margin: 0 auto; background: #8bc34a; }
  </style>
</head>
<body>
<canvas id="gameCanvas" width="800" height="400"></canvas>
<script>
const canvas = document.getElementById("gameCanvas");
const ctx = canvas.getContext("2d");

let gameOver = false;
let score = 0;

// Spieler (Affe auf Hund)
const player = {
  x: 50,
  y: 300,
  width: 60,
  height: 60,
  color: "#ffaa00",
  velocityY: 0,
  gravity: 0.7,
  jumpStrength: -12,
  isJumping: false
};

// Hindernisse
const obstacles = [];

function createObstacle() {
  const width = 40;
  const height = 40;
  const x = canvas.width;
  const y = canvas.height - height;
  obstacles.push({ x, y, width, height });
}

function resetGame() {
  gameOver = false;
  score = 0;
  player.y = 300;
  player.velocityY = 0;
  obstacles.length = 0;
}

function drawPlayer() {
  ctx.fillStyle = player.color;
  ctx.fillRect(player.x, player.y, player.width, player.height);
}

function drawObstacles() {
  ctx.fillStyle = "#654321";
  obstacles.forEach(obs => {
    obs.x -= 6;
    ctx.fillRect(obs.x, obs.y, obs.width, obs.height);
  });
}

function checkCollision() {
  for (let obs of obstacles) {
    if (
      player.x < obs.x + obs.width &&
      player.x + player.width > obs.x &&
      player.y < obs.y + obs.height &&
      player.y + player.height > obs.y
    ) {
      gameOver = true;
    }
  }
}

function drawScore() {
  ctx.fillStyle = "black";
  ctx.font = "24px sans-serif";
  ctx.fillText("Punkte: " + score, 20, 30);
}

function drawGameOver() {
  ctx.fillStyle = "red";
  ctx.font = "48px sans-serif";
  ctx.fillText("Game Over", 270, 200);
  ctx.font = "24px sans-serif";
  ctx.fillText("Tippe oder drÃ¼cke eine Taste zum Neustart", 180, 240);
}

function update() {
  if (gameOver) return;

  // Schwerkraft
  player.velocityY += player.gravity;
  player.y += player.velocityY;

  if (player.y > 300) {
    player.y = 300;
    player.velocityY = 0;
    player.isJumping = false;
  }

  // Hindernisse erzeugen
  if (Math.random() < 0.015) {
    createObstacle();
  }

  // Entferne alte Hindernisse
  if (obstacles.length > 0 && obstacles[0].x + obstacles[0].width < 0) {
    obstacles.shift();
    score++;
  }

  checkCollision();
}

function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  drawPlayer();
  drawObstacles();
  drawScore();

  if (gameOver) {
    drawGameOver();
  }
}

function gameLoop() {
  update();
  draw();
  requestAnimationFrame(gameLoop);
}

// Steuerelemente
function jump() {
  if (!player.isJumping && !gameOver) {
    player.velocityY = player.jumpStrength;
    player.isJumping = true;
  } else if (gameOver) {
    resetGame();
  }
}

document.addEventListener("keydown", jump);
canvas.addEventListener("touchstart", jump);

// Spiel starten
gameLoop();
</script>
</body>
</html>
